((lambda (foldr)
   ((lambda x x)
    (foldr cons (quote (a b c)) (quote (x y z)))
    (foldr (lambda (c r) (foldr cons (cons c nil) r)) nil
           (quote (a b c d e)))
    (foldr (lambda (c r) (cons (foldr (lambda (x r) (+ x r)) 0 c) r)) nil
           (quote ((1 2 3 4 5) (9 5) (-3 100 5) (42))))
    (foldr (lambda (c1 c2 r) (cons (cons c1 c2) r)) nil
           (quote (a b c)) (quote (10 20 30)))
    (foldr (lambda (c r) (if (lt c 0) (cons c r) r)) nil
           (quote (1 2 -3 -4 5 6 -7 8 9)))))
 ((lambda (u) (u u))
  (lambda (u)
    (lambda fv
      ((lambda (f i a b)
         (if (eq a nil) i
         (if (eq b nil)
             (f (car a) ((u u) f i (cdr a)))
             (f (car a) (car (car b))
                ((u u) f i (cdr a) (cdr (car b)))))))
       (car fv) (car (cdr fv)) (car (cdr (cdr fv))) (cdr (cdr (cdr fv))))))))

