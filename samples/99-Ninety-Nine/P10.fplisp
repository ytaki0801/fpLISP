((lambda (encode)
   (encode (quote (a a a a b c c a a d e e e e))))
 ((lambda (u) (u u)) (lambda (u) (lambda (l)
    ((lambda (length pega tira)
       (if (eq l nil) nil
           (cons ((lambda x x) (length (pega l)) (car l))
                 ((u u) (tira l)))))
     ((lambda (u) (u u)) (lambda (u) (lambda (l)
        (if (eq l nil) 0 (+ 1 ((u u) (cdr l)))))))
     ((lambda (u) (u u)) (lambda (u) (lambda (l)
        (if (eq l nil) nil
        (if (eq (cdr l) nil) l
        (if (eq (car l) (car (cdr l)))
            (cons (car l) ((u u) (cdr l)))
            ((lambda x x) (car l))))))))
     ((lambda (u) (u u)) (lambda (u) (lambda (l)
        (if (eq l nil) nil
        (if (eq (cdr l) nil) nil
        (if (eq (car l) (car (cdr l)))
            ((u u) (cdr l)) (cdr l))))))))))))

