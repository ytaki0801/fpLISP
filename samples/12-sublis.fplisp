((lambda (assoc sublis al L)
   (sublis al L assoc))
 ((lambda (u) (u u))
  (lambda (u)
    (lambda (k vs)
      (if (eq vs nil) nil
          (if (eq (car (car vs)) k)
              (car vs)
              ((u u) k (cdr vs)))))))
 ((lambda (u) (u u))
  (lambda (u)
    (lambda (al L assoc)
      (if (eq L nil) nil
          (cons
            (if (atom (car L))
                ((lambda (r)
                   (if (eq r nil)
                       (car L) (cdr r)))
                 (assoc (car L) al))
                ((u u) al (car L) assoc))
            ((u u) al (cdr L) assoc))))))
 (quote ((X . John) (Y . Mary)))
 (quote ((Jim aka X) likes Y)))

